#include <VirtualWire.h>

#define HEADER_BYTE 0xAA
#define EMITTER_ID 0x01
#define RECEIVER_ID_1 0x02
#define RECEIVER_ID_2 0x03

const int IMAGE_WIDTH = 32;
const int IMAGE_HEIGHT = 32;
const int TOTAL_PIXELS = IMAGE_WIDTH * IMAGE_HEIGHT;

const int DATA_BYTES_PER_PACKET = 20; // Ahora enviamos 20 bytes por paquete
const int PACKET_SIZE = 1 + 1 + 1 + 1 + DATA_BYTES_PER_PACKET + 1; 
// 25 bytes => Header + Emisor + Receptor + Start Index + Data + Checksum

const uint8_t data_to_send[TOTAL_PIXELS] = {
135, 135, 135, 135, 135, 134, 134, 134, 135, 138, 135, 135, 135, 135, 135, 135,
  135, 135, 135, 135, 141, 165, 190, 189, 161, 137, 133, 136, 149, 152, 149, 136,
  135, 135, 135, 135, 137, 138, 138, 138, 141, 152, 137, 135, 137, 135, 135, 135,
  135, 135, 133, 136, 154, 160, 164, 161, 140, 136, 147, 161, 227, 225, 228, 164,
  135, 135, 135, 141, 162, 165, 164, 161, 155, 140, 135, 140, 152, 137, 135, 135,
  134, 136, 148, 151, 154, 154, 154, 153, 150, 162, 228, 226, 217, 139, 208, 212,
  135, 135, 140, 162, 186, 190, 186, 162, 140, 135, 137, 152, 140, 135, 135, 136,
  147, 162, 228, 222, 218, 218, 218, 218, 218, 222, 217, 123, 104, 108, 51, 46,
  135, 137, 155, 161, 164, 164, 161, 140, 135, 135, 135, 137, 135, 135, 135, 159,
  228, 225, 217, 131, 116, 117, 117, 117, 116, 109, 111, 119, 87, 88, 78, 110,
  135, 135, 138, 139, 151, 155, 154, 148, 136, 133, 134, 133, 133, 135, 158, 231,
  221, 130, 122, 174, 182, 182, 183, 183, 177, 139, 122, 121, 97, 117, 98, 123,
  135, 135, 136, 158, 226, 213, 212, 227, 162, 149, 150, 150, 149, 161, 232, 222,
  139, 174, 185, 198, 196, 176, 174, 183, 182, 167, 109, 97, 124, 134, 124, 93,
  135, 134, 148, 228, 214, 69, 74, 202, 216, 235, 223, 219, 219, 220, 206, 114,
  149, 174, 193, 177, 157, 62, 45, 82, 105, 118, 168, 141, 135, 135, 128, 87,
  135, 134, 150, 223, 125, 115, 142, 65, 67, 196, 128, 118, 120, 113, 60, 36,
  45, 64, 141, 56, 60, 143, 104, 41, 160, 185, 196, 184, 141, 134, 128, 88,
  135, 134, 150, 220, 111, 122, 136, 146, 92, 114, 134, 174, 179, 167, 159, 168,
  169, 147, 62, 107, 153, 141, 112, 38, 174, 200, 197, 190, 142, 134, 128, 88,
  135, 134, 150, 220, 111, 113, 104, 137, 139, 175, 188, 194, 174, 110, 112, 185,
  189, 141, 116, 128, 135, 130, 113, 48, 157, 195, 198, 190, 142, 134, 128, 88,
  135, 133, 149, 220, 107, 97, 133, 179, 188, 192, 184, 171, 108, 87, 108, 183,
  187, 136, 129, 129, 128, 128, 127, 102, 55, 176, 198, 184, 141, 134, 128, 88,
  135, 136, 161, 222, 111, 125, 180, 194, 195, 183, 111, 97, 88, 108, 173, 192,
  180, 133, 112, 113, 127, 128, 129, 111, 38, 173, 186, 147, 135, 135, 128, 87,
  134, 147, 228, 217, 99, 129, 188, 194, 195, 183, 111, 99, 110, 173, 194, 188,
  141, 106, 51, 50, 105, 127, 129, 113, 48, 149, 147, 135, 135, 134, 124, 93,
  133, 149, 223, 106, 42, 110, 179, 194, 194, 193, 182, 170, 171, 192, 194, 179,
  110, 57, 163, 179, 70, 105, 127, 127, 105, 57, 109, 133, 135, 129, 97, 122,
  136, 162, 213, 51, 78, 40, 128, 189, 194, 193, 174, 110, 111, 182, 183, 127,
  40, 89, 116, 230, 184, 49, 113, 129, 127, 101, 42, 120, 135, 124, 97, 128,
  149, 228, 210, 63, 95, 50, 110, 179, 195, 183, 108, 87, 109, 176, 142, 101,
  40, 112, 100, 217, 224, 66, 114, 129, 127, 100, 27, 105, 128, 97, 124, 134,
  152, 222, 137, 177, 140, 185, 56, 127, 189, 184, 110, 109, 173, 180, 121, 38,
  106, 205, 104, 120, 231, 197, 136, 128, 116, 34, 3, 25, 101, 97, 130, 135,
  152, 218, 127, 207, 122, 185, 43, 117, 180, 185, 175, 175, 179, 142, 112, 23,
  88, 205, 152, 153, 237, 210, 139, 127, 123, 77, 22, 16, 39, 102, 119, 133,
  153, 217, 114, 169, 100, 89, 40, 115, 136, 136, 137, 138, 135, 130, 114, 37,
  74, 106, 142, 160, 218, 149, 116, 126, 128, 123, 114, 113, 102, 41, 42, 105,
  153, 210, 42, 45, 97, 105, 113, 124, 116, 125, 125, 115, 125, 128, 127, 116,
  121, 122, 122, 117, 124, 102, 52, 115, 125, 128, 129, 128, 122, 110, 101, 42,
  153, 213, 66, 77, 38, 41, 128, 114, 54, 117, 117, 55, 115, 123, 113, 112,
  113, 113, 102, 36, 29, 40, 104, 121, 91, 122, 128, 124, 96, 96, 119, 114,
  149, 226, 206, 74, 84, 101, 190, 103, 103, 120, 119, 109, 116, 85, 31, 24,
  23, 48, 174, 100, 106, 115, 126, 103, 48, 115, 129, 124, 95, 87, 96, 124,
  136, 158, 230, 206, 75, 100, 120, 94, 88, 82, 81, 86, 89, 84, 75, 73,
  67, 75, 109, 124, 127, 115, 101, 50, 104, 127, 128, 128, 116, 95, 96, 123,
  135, 135, 159, 230, 206, 68, 52, 100, 104, 90, 86, 113, 135, 139, 140, 133,
  100, 116, 108, 111, 102, 40, 40, 104, 127, 129, 126, 112, 101, 120, 123, 123,
  135, 135, 135, 159, 227, 217, 196, 42, 37, 96, 106, 110, 115, 115, 114, 114,
  109, 101, 41, 30, 40, 101, 114, 127, 126, 117, 112, 41, 109, 128, 120, 96,
  135, 135, 134, 136, 150, 166, 212, 45, 94, 51, 38, 29, 19, 29, 31, 31,
  30, 41, 101, 100, 119, 134, 129, 125, 115, 53, 89, 41, 114, 124, 95, 87,
  138, 138, 138, 141, 151, 153, 212, 75, 146, 164, 164, 112, 37, 87, 111, 111,
  111, 112, 102, 60, 162, 181, 138, 105, 123, 101, 39, 102, 127, 123, 92, 87,
  165, 164, 161, 155, 139, 148, 227, 202, 60, 129, 189, 180, 109, 41, 115, 131,
  131, 115, 40, 101, 140, 176, 168, 129, 128, 112, 30, 112, 129, 123, 92, 87,
  190, 186, 162, 140, 135, 136, 162, 213, 53, 119, 188, 188, 123, 40, 100, 112,
  112, 98, 41, 120, 126, 102, 103, 125, 129, 112, 30, 112, 129, 124, 95, 87,
  165, 161, 141, 135, 135, 133, 149, 219, 108, 135, 188, 187, 135, 102, 31, 43,
  47, 55, 114, 172, 138, 104, 103, 125, 127, 101, 39, 101, 127, 128, 119, 96,
  139, 138, 135, 135, 135, 134, 150, 224, 147, 177, 194, 186, 137, 111, 41, 191,
  221, 207, 148, 185, 186, 180, 173, 135, 113, 43, 86, 43, 114, 129, 128, 123,
};

uint8_t calculateChecksum(uint8_t *data, uint8_t len) {
  uint8_t crc = 0x00;
  for (uint8_t i = 0; i < len; i++) {
    crc ^= data[i];
    for (uint8_t j = 0; j < 8; j++) {
      if (crc & 0x80)
        crc = (crc << 1) ^ 0x07; // Polynomial x^8 + x^2 + x + 1 (0x07)
      else
        crc <<= 1;
    }
  }
  return crc;
}

void setup() {
  vw_set_ptt_inverted(true);
  vw_setup(2000);
  vw_set_tx_pin(2);
  Serial.begin(9600);
  Serial.println("Configurando envio de imagen 20 bytes/paquete...");
}

void loop() {
  uint8_t packet[PACKET_SIZE];

  int total_pixels = TOTAL_PIXELS;
  int packets_to_send = (total_pixels + DATA_BYTES_PER_PACKET - 1) / DATA_BYTES_PER_PACKET; // ceil

  for (int pkt = 0; pkt < packets_to_send; pkt++) {
    packet[0] = HEADER_BYTE;
    packet[1] = EMITTER_ID;
    packet[2] = RECEIVER_ID_2;
    int start_index = pkt * DATA_BYTES_PER_PACKET;
    packet[3] = start_index;

    // Copiar los 20 bytes (o menos si es el Ãºltimo paquete)
    for (int i = 0; i < DATA_BYTES_PER_PACKET; i++) {
      int data_index = start_index + i;
      if (data_index < total_pixels) {
        packet[4 + i] = data_to_send[data_index];
      } else {
        packet[4 + i] = 0; // relleno con 0 si pasamos el total
      }
    }

    // Calcular checksum sobre los primeros 24 bytes
    packet[PACKET_SIZE - 1] = calculateChecksum(packet, PACKET_SIZE - 1);

    vw_send(packet, PACKET_SIZE);
    vw_wait_tx();

    Serial.print("Enviando paquete ");
    Serial.print(pkt + 1);
    Serial.print("/");
    Serial.print(packets_to_send);
    Serial.print("| squence: ");
    Serial.print(start_index);
  
    Serial.print(" | Checksum: 0x");
    Serial.println(packet[PACKET_SIZE - 1], HEX);

    delay(20);
  }

  Serial.println("Envio de imagen completado. Reenviando en 5 segundos...");
  delay(5000);
}